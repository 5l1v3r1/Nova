extends layout

block content
  div#lightbox(class='white_content')
    p Cron strings will take the following syntax structure:
    p   
    p  *    *    *    *    * 
    p  ┬    ┬    ┬    ┬    ┬
    p  │    │    │    │    │
    p  │    │    │    │    │
    p  │    │    │    │    └───── day of week (0 - 6) (0 is Sunday)
    p  │    │    │    └────────── month (1 - 12)
    p  │    │    └─────────────── day of month (1 - 31)
    p  │    └──────────────────── hour (0 - 23)
    p  └───────────────────────── min (0 - 59)
    p  
    p  Note: If trying to use a time interval that requires no minutes
    p  component, minutes must be set to '0', not '*'
    br
    p  Some Special Characters: 
    p  '*' : At every point the clock encounters this time interval,
    p        execute
    p  '/' : Used in conjunction with '*'; can be used to subdivide
    p        the interval into smaller segments. 
    p        Example: "0 */2 * * *" means execute the selected 
    p        message cycle every 2 hours. Note that "0 2 * * *"
    p        would mean execute message cycle every day at 2:00 am  
    p  '-' : Used to define a range.
    p 
    a(href="http://en.wikipedia.org/wiki/Cron") --- More Help ---
    br
    br
    button(onclick='hideCronPrimer()') Close
  div#opaque
    table
      thead
        tr
          th Connected Clients
          th Groups
      tbody
        tr
          td
            table(style='border: 2px solid; width: 200px; border-collapse: collapse;')
              tbody(id='clientsList')
          td
            table(style='border: 2px solid; width: 200px; border-collapse: collapse;')
              tbody(id='groupsList')
    br
    br
    div(id='elementHook')
    br
    button(onclick='submitSchedule()') Submit Scheduling Changes
          
block headerAdditions
  script(type='text/javascript', src='scripts/ConnectionManagement.js')
  script(type='text/javascript', src='scripts/Schedule.js')
  script
    var clients = '#{CLIENTS}'.split(':');
    var groups = !{GROUPS};
    var messageTypes = '#{TYPES}'.split(',');
    var message = {};
    message.id = '';
    
    now.ready(function(){
      now.GetClients(now.RenderConnectionsList);
      now.SetUpNotificationsButton();
      now.GetClients(function(list){
        for(var i in list)
        {
          if(list[i] != '')
          {
            now.UpdateConnectionsList(list[i], 'updateStatus');  
          } 
        }
      });
      setUpClientsList('clientsList');
      setUpGroupsList('groupsList');
    });