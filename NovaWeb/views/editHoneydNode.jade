extends layout 

block headerAdditions
  link(rel="stylesheet", type="text/css", href="configstyle.css", media="screen")

  script
    function ipTypeChanged() {
      var ipEditEnabled;
      var macEditEnabled;

      if (document.getElementById("ipType").value == "DHCP") {
        ipEditEnabled = true;
      } else {
        ipEditEnabled = false;
      }

      for (var i = 0; i < 4; i++) {
        document.getElementById("ip" + i).disabled = ipEditEnabled;
      }
     }
    
    function macTypeChanged() {
      if (document.getElementById("macType").value == "RANDOM") {
        macEditEnabled = true;
      } else {
        macEditEnabled = false;
      }

      for (var i = 0; i < 6; i++) {
        document.getElementById("mac" + i).disabled = macEditEnabled;
      }
    }

    function checkOnlyOne(checkedBox)
    {
      var forLength = document.getElementById("length").getAttribute("value");
      
      var checkAgainst = checkedBox.getAttribute("id");
      
      if(forLength == 1)
      {
        checkedBox.checked = true;
        return;
      }
      
      for(var i = 0; i < forLength; i++)
      {
        if(checkAgainst !== ("if" + i))
        {
          document.getElementById("if" + i).checked = false;
        }
      }
      
      if(!checkedBox.checked)
      {
        checkedBox.checked = true; 
      }  
    }
    


block content
  br
  form(method="post", action="/editHoneydNodeSave")
    h2 Editing Honeyd Node "#{oldName}"

    input(type="hidden", name="oldName", value="#{oldName}")

    label Profile
    select(name="profile")
      each p, i in profiles
        if p == profile
          option(SELECTED) #{p}
        else
          option #{p}
    br
    br

    label Network Interface
    // TODO: Somehow show the user valid interface options
    table
      thead
        tr 
          th Interfaces
      tbody
      - if(INTERFACES.length == 1)
        tr 
          td
            input(type="checkbox", value=INTERFACES[0], id="if0", name="interface", width=10, checked, onclick="checkOnlyOne(if0)")
            #{INTERFACES[0]}
      - else
        tr 
          td
            input(type="checkbox", value=INTERFACES[0], id="if0", name="interface", width=10, checked, onclick="checkOnlyOne(if0)")
            #{INTERFACES[0]}
        - for (var i = 1; i < INTERFACES.length; i++)
            tr 
              td
                input(type="checkbox", value=INTERFACES[i], id="if#{i}", name="interface", width=10, onclick="checkOnlyOne(if#{i})")
                #{INTERFACES[i]}
    hidden(id="length", value=INTERFACES.length)
   
    br
    br
    label IP Address Range Type
    select#ipType(name="ipType", onChange="ipTypeChanged()")
      if ip == 'DHCP'
        option(SELECTED) DHCP
      else
        option DHCP

      if ip == 'DHCP'
        option IP Address
      else
        option(SELECTED) IP Address

    br
    label IP address
    - for (var i = 0; i < 4; i++)
      - if (ip == 'DHCP')
        input.ip(id = "ip" + i,type="number", name="#{"ip" + i}", min="0", max="255", required="true", value="1", disabled="disabled")
      - else
        input.ip(id = "ip" + i,type="number", name="#{"ip" + i}", min="0", max="255", required="true", value="#{ip.split(".")[i]}")
    


    br
    br
    label MAC Address Type
    select#macType(name="macType", onChange="macTypeChanged()")
      if mac != 'RANDOM'
        option(SELECTED) Specific MAC
      else
        option Specific MAC

      if mac != 'RANDOM'
        option RANDOM
      else
        option(SELECTED) RANDOM

    br
    label MAC Address
    - for (var i = 0; i < 6; i++)
      - if (mac == 'RANDOM')
        input(id = "mac" + i, type="text", name="#{"mac" + i}", pattern="[0-9a-f]{2}", required="true", value="00", disabled="disabled", style="width: 25px")
      - else
        input(id = "mac" + i, type="text", name="#{"mac" + i}", pattern="[0-9a-f]{2}", required="true", value="#{mac.split(":")[i]}", style="width: 25px")


    br
    br
    input(type="Submit",value="Confirm Node Edits")
