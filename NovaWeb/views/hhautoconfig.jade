extends layout

block headerAdditions
  script
    function watermark(id, text)
    {
      var element = document.getElementById(id);
    
      if(element.value.length > 0)
      {
        if(element.value == text)
        {
          element.value = '';
        }
      }
      else
      {
        element.value = text;
      }
    }
  
    function validateAndAdd(id, errLabel, dest)
    {
      var toValidate = document.getElementById(id).value;
    
      var regex = new RegExp("^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\/[1-3]?[0-9]$");
    
      if((toValidate[toValidate.length - 2] >= 3 && toValidate[toValidate.length - 1] > 2)
        || (toValidate[toValidate.length - 3] != '/' && toValidate[toValidate.length - 2] != '/'))
      {
        document.getElementById(errLabel).innerHTML = "Invalid subnet bit value (e.g. 33 or higher)";
        return;
      }
    
      if(regex.test(toValidate))
      {
        document.getElementById(errLabel).innerHTML = "Valid subnet found!";
        // add here
        var tr = document.createElement("tr");
        var td = document.createElement("td");
        
        var input = document.createElement("input");
        input.setAttribute("type", "text");
        input.setAttribute("id", "subnets");
        input.setAttribute("readonly", "true");
        input.setAttribute("name", "subnets");
        input.setAttribute("value", toValidate);
        input.innerHTML = toValidate;
        
        td.appendChild(input);
        tr.appendChild(td);
        document.getElementById(dest).children[1].appendChild(tr);
        
        document.getElementById(id).value = '';
        document.getElementById(id).blur();
      }
      else
      {
        document.getElementById(errLabel).innerHTML = "That is not a valid subnet.";
        return;
      }
    }
    
    function checkIntMax(id)
    {
      if(document.getElementById(id).value > 511)
      {
        document.getElementById(id).value = 511;
      }
      else if(document.getElementById(id).value < 1)
      {
        document.getElementById(id).value = 1;
      }
      return;
    }
    
    function checkAtLeastOne()
    {
      // check that there is at least one subnet or one interface selected here
      
      document.getElementById("submitInfo").submit();
    }

block content

  h2 Haystack Autoconfig
  form(id="submitInfo", method="post", action="/scanning")
    h2 Interfaces to Scan
    table
      thead
        tr 
          th Interfaces
      tbody 
      - for (var i = 0; i < INTERFACES.length; i++)
          tr 
            td
              input(type="checkbox", value=INTERFACES[i], id="if#{i}", name="interfaces", width=10, checked)
              #{INTERFACES[i]}
              
    hidden(id="length", value=INTERFACES.length)
    br
    label Number of Haystack Nodes to create: 
    input(type="number", name="numNodes", id="numNodes", width="4", min="1", max="511", onblur="checkIntMax(\"numNodes\")", value="1")
    br
    br
    label(id="errorLabel", style="color:red;") 
    br
    label Additional Subnets to scan:
    input(type="text", id="subnetToAdd", width="20", onkeydown="if (event.keyCode == 13){ document.getElementById('addSubnet').click(); event.returnValue=false; event.cancel=true; }", onblur="watermark(\"subnetToAdd\", \"Format: XXX.XXX.XXX.0/##\");", onfocus="watermark(\"subnetToAdd\", \"Format: XXX.XXX.XXX.0/##\");", value="Format: XXX.XXX.XXX.0/##") 
    button(type="button", id="addSubnet", style="width:160px", onclick="validateAndAdd(\"subnetToAdd\", \"errorLabel\", \"subnetsList\");") Add Subnet
    br
    br
    table(id="subnetsList")
      thead
        tr
          th
            label Subnets
      tbody
      
    br
    br
    input(type="submit", id="startScan", value="Start Scanning", onclick="document.getElementById(\"startScan\").value='Scanning...'; document.getElementById(\"startScan\").setAttribute('disabled', 'true'); checkAtLeastOne()")
  
